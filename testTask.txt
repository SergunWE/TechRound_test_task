Задание 1

Имеется набор из оружия разного типа и персонажей разных классов.

Набор оружия состоит из: Стрелковое (Лук, Арбалет,Мушкет), Ближний бой (Короткий меч, Длинный меч, Кинжал), Магическое(Посох, Магическая книга, Магический символ). Каждое оружие имеет список характеристик.

Урон

И список требований к параметрам персонажа:

Сила

Ловкость

Интеллект


	Персонаж имеет набор характеристик: HP,MP, Сила. Ловкость, Интеллект. При создании персонажа устанавливаются все параметры, если параметр не указан устанавливается значение по умолчанию 1.


Персонаж должен принадлежать к одному из следующих классов: Воин, Стрелок, Маг.


	Персонаж определенного класса может применять только оружие определенного типа, и соответствующее ему по характеристикам. 


Воин - Ближний бой 

Стрелок - Стрелковое 

Маг - Магическое


Для каждого типа оружия проверяется соответствие только 1 из характеристик.

Стрелковое - Ловкость

 Ближний бой  - Сила

Магическое - Интеллект


каждому персонажу можно экипировать оружие только то что соответствует его классу и его текущим характеристикам.



Задание:

Спроектировать и реализовать на языке C# описанное выше. В качестве результата Должен быть реализован набор классов и пример их взаимодействия. Среда выполнения любая, средство визуализации любое (Консоль, вин форм,....).


Ожидаемый результат. Пример. 

Персонаж маг -> Экипировать меч -> Персонаж не соответствует классу


Персонаж маг -> Экипировать Посох -> Персонаж не соответствует характеристике. Необходимо интелект 10 - текущее значение 5.


Персонаж маг -> Экипировать Магическую книгу -> Магическая книга экипирована



Задание 2

Каждый персонаж должен уметь нанести урон по таргет цели. 
Пример функции:


        void Atack(object Target)

        {

	………..

        }

А также должен получить урон и уменьшить свое HP. Урон нанесенный при атаке зависит от оружия экипированного у персонажа наносящего урон на момент нанесения урона.


Ввести дополнительную сущность NPC не являющуюся персонажем. Реализовать неуязвимость к урону. 


Задание:
	Спроектировать и реализовать на языке C# описанное выше. Дополнив функционал из задания 1.


Ожидаемый результат. Пример. 

Персонаж 1 -> атака(персонаж 2) 

Персонаж 2 -> получен урон 5 единиц -> остаток HP 95/100

Персонаж 1 -> атака(NPC 1) 

Задание 3

Расширить систему экипировки персонажа. Добавить новые классы экипировки: Броня, Шлем, Бижутерия. 

	Экипировка разделена по классам:

Воин - Тяжелая броня, Латный шлем 

Стрелок - Кожаная броня, Шлем разбойника

Маг - Магическая броня, Магический колпак

Персонаж не может носить экипировку не своего класса.


Каждый предмет экипировки имеет свои характеристики: Броня, Защита от рубящего урона, Магическая защита, Защита от колющего урона.


Показатели защиты варьируются в зависимости от типа и предмета экипировки



Броня

 Защита от рубящего урона

Магическая защита

 Защита от колющего урона

Тяжелая броня

30

15

2

5

Латный шлем

20

10

2

5

Кожаная броня

15

5

2

15

Шлем разбойника

10

5

2

10

Магическая броня

5

2

30

5

Магический колпак

5

2

20

5



Задание:

Спроектировать и реализовать на языке C# описанное выше. В качестве результата Должен быть реализован набор классов и пример их взаимодействия. Среда выполнения любая, средство визуализации любое (Консоль, вин форм,....).

 

Ожидаемый результат. Пример. 


Маг -> Экипировать(Магическая_броня)->Магисеская_броня экипирована

Маг -> Экипировать(Латный_шлем)->Латный_шлем не соответствует классу персонажа

Воин ->Экипировать(Латный_шлем)->Латный_шлем экипирован







Задание 4

Необходимо расширить список характеристик оружия, добавив параметр особого урона:

Ближний бой: Рубящий урон

Стрелковое : Колющий урон

Магическое: Магический урон


Расширить систему нанесения урона из задания 2. Добавить учитывание особого урона оружия при нанесении крона, а также учитывать защиту экипировки на персонаже.


Получаемый персонажем урон рассчитывать  по принципу:

 (основной_урон - Показатель_брони) = Основной урон 

Основной урон >=0 

(особый_урон - соответствующий_этому типу_показатель_защиты) = Особый урон

Особый урон >=0

Основной урон + Особый урон = Суммарный урон

	

Задание:

Спроектировать и реализовать на языке C# описанное выше. В качестве результата Должен быть реализован набор классов и пример их взаимодействия. Среда выполнения любая, средство визуализации любое (Консоль, вин форм,....).

 

Ожидаемый результат. Пример. 

Персонаж маг -> Экипировать(Посох (атака 10. Маг.Атака 30))

Персонаж маг  -> Экипировать(Магическая_броня)->Магисеская_броня экипирована

Персонаж маг2->Экипировать(Магическая_броня)->Магическая_броня


Персонаж маг -> атака(Персонаж маг2) 

Персонаж маг2 -> получен урон 5 единиц  -> остаток HP 95/100


Персонаж маг -> Экипировать(Посох (атака 10. Маг.Атака 35))

Персонаж маг -> атака(Персонаж маг2) 

Персонаж маг2 -> получен урон 10 единиц  -> остаток HP 90/100

============================
