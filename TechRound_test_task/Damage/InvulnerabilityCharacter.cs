using InputOutput;

namespace TechRound_test_task
{
    /// <summary>
    /// Мне кажется это очень что-то страшное, но это, вроде, работает
    /// </summary>
    public class InvulnerabilityCharacter : ICharacter
    {
        private readonly ICharacter _character;
        public InvulnerabilityCharacter(ICharacter character)
        {
            _character = character;
        }

        public bool Attack(object target)
        {
            return _character.Attack(target);
        }

        public bool TakeDamage(int damage)
        {
            ConsoleNotification.PrintNotice("Эта цель неуязвима");
            return false;
        }

        public void SetWeapon(Weapon weapon)
        {
            _character.SetWeapon(weapon);
        }

        public string CharacterName()
        {
           return _character.CharacterName();
        }

        public int HitPoints()
        {
            return _character.HitPoints();
        }

        public int ManaPoints()
        {
            return _character.ManaPoints();
        }

        public MainFeatures GetMainFeatures()
        {
            return _character.GetMainFeatures();
        }

        public Weapon GetWeapon()
        {
            return _character.GetWeapon();
        }

        public Protection[] GetProtection()
        {
            return _character.GetProtection();
        }

        public bool Alive()
        {
            return _character.Alive();
        }

        public void SetProtected(Protection protection)
        {
            _character.SetProtected(protection);
        }
    }
}